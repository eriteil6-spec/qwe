import { useState } from 'react';

export default function App() {
  const [currentPage, setCurrentPage] = useState('home');
  const [formData, setFormData] = useState({ name: '', email: '', message: '' });
  const [formSubmitted, setFormSubmitted] = useState(false);

  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    setFormSubmitted(true);
    setTimeout(() => setFormSubmitted(false), 3000);
  };

  const pages = {
    home: (
      <HomePage setCurrentPage={setCurrentPage} />
    ),
    stereoImages: (
      <StereoImagesPage setCurrentPage={setCurrentPage} />
    ),
    howToView: (
      <HowToViewPage setCurrentPage={setCurrentPage} />
    ),
    literature: (
      <LiteraturePage setCurrentPage={setCurrentPage} />
    ),
    contact: (
      <ContactPage
        formData={formData}
        handleChange={handleChange}
        handleSubmit={handleSubmit}
        formSubmitted={formSubmitted}
        setCurrentPage={setCurrentPage}
      />
    ),
    siteMap: (
      <SiteMapPage setCurrentPage={setCurrentPage} />
    ),
  };

  return (
    <div className="min-h-screen flex flex-col bg-gray-50">
      <Header setCurrentPage={setCurrentPage} currentPage={currentPage} />
      <main className="flex-grow">
        {pages[currentPage]}
      </main>
      <Footer setCurrentPage={setCurrentPage} />
    </div>
  );
}

function Header({ setCurrentPage, currentPage }) {
  return (
    <header className="bg-gradient-to-r from-blue-600 to-indigo-700 text-white shadow-lg">
      <div className="container mx-auto px-4 py-4 flex justify-between items-center">
        <h1 className="text-2xl font-bold tracking-tight cursor-pointer" onClick={() => setCurrentPage('home')}>
          Стереоизображения
        </h1>
        <nav className="hidden md:flex space-x-6">
          {['Главная', 'Стереоизображения', 'Как смотреть', 'Литература', 'Карта сайта'].map((title, i) => (
            <button
              key={i}
              onClick={() => setCurrentPage(['home', 'stereoImages', 'howToView', 'literature', 'siteMap'][i])}
              className={`hover:text-yellow-200 transition-colors duration-300 ${
                currentPage === ['home', 'stereoImages', 'howToView', 'literature', 'siteMap'][i]
                  ? 'underline decoration-yellow-300 underline-offset-4'
                  : ''
              }`}
            >
              {title}
            </button>
          ))}
        </nav>
        <button
          onClick={() => setCurrentPage('contact')}
          className="bg-yellow-400 hover:bg-yellow-300 text-gray-800 font-semibold px-4 py-2 rounded-md shadow transition-transform transform hover:scale-105"
        >
          Обратная связь
        </button>
      </div>
    </header>
  );
}

function Footer({ setCurrentPage }) {
  return (
    <footer className="bg-gray-800 text-white py-8">
      <div className="container mx-auto px-4">
        <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
          <div>
            <h3 className="text-xl font-bold mb-4">Стереоизображения</h3>
            <p className="text-gray-400">
              Изучение стереоскопического зрения и методов визуализации изображений в объеме.
            </p>
          </div>
          <div>
            <h4 className="font-semibold mb-3">Навигация</h4>
            <ul className="space-y-2 text-gray-400">
              <li><button onClick={() => setCurrentPage('home')} className="hover:text-white transition-colors">Главная</button></li>
              <li><button onClick={() => setCurrentPage('stereoImages')} className="hover:text-white transition-colors">Стереоизображения</button></li>
              <li><button onClick={() => setCurrentPage('howToView')} className="hover:text-white transition-colors">Как смотреть</button></li>
              <li><button onClick={() => setCurrentPage('literature')} className="hover:text-white transition-colors">Литература</button></li>
              <li><button onClick={() => setCurrentPage('siteMap')} className="hover:text-white transition-colors">Карта сайта</button></li>
            </ul>
          </div>
          <div>
            <h4 className="font-semibold mb-3">Связь</h4>
            <p className="text-gray-400">Если у вас есть вопросы или предложения:</p>
            <button
              onClick={() => setCurrentPage('contact')}
              className="mt-2 inline-block bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md transition-colors"
            >
              Написать нам
            </button>
          </div>
        </div>
        <div className="border-t border-gray-700 mt-8 pt-6 text-center text-gray-500 text-sm">
          &copy; {new Date().getFullYear()} Сайт о стереоизображениях. Все права защищены.
        </div>
      </div>
    </footer>
  );
}

function HomePage({ setCurrentPage }) {
  return (
    <section className="container mx-auto px-4 py-12">
      <div className="max-w-4xl mx-auto text-center">
        <h2 className="text-4xl font-extrabold text-gray-800 mb-6">
          Добро пожаловать на сайт о стереоизображениях
        </h2>
        <p className="text-lg text-gray-600 mb-8 leading-relaxed">
          Здесь вы узнаете всё о принципах стереоскопии, способах просмотра объёмных изображений,
          а также сможете посмотреть примеры стереопар и узнать интересные факты об истории их создания.
        </p>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <FeatureCard
            title="Интерактивные стереоизображения"
            description="Просмотрите подборку качественных стереопар с возможностью увеличения и детального рассмотрения."
            icon={<ImageIcon />}
            action={() => setCurrentPage('stereoImages')}
          />
          <FeatureCard
            title="Методы просмотра"
            description="Узнайте, как правильно смотреть стереоизображения различными способами, включая кросс-глаз и параллельный взгляд."
            icon={<EyeIcon />}
            action={() => setCurrentPage('howToView')}
          />
        </div>
        <div className="mt-12">
          <button
            onClick={() => setCurrentPage('literature')}
            className="bg-indigo-600 hover:bg-indigo-700 text-white px-6 py-3 rounded-md shadow-md transition-transform transform hover:scale-105"
          >
            Литература и источники
          </button>
        </div>
      </div>
    </section>
  );
}

function FeatureCard({ title, description, icon, action }) {
  return (
    <div
      onClick={action}
      className="bg-white p-6 rounded-xl shadow-md hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1 cursor-pointer border border-gray-200"
    >
      <div className="w-12 h-12 mb-4 text-indigo-600">{icon}</div>
      <h3 className="text-xl font-semibold mb-2 text-gray-800">{title}</h3>
      <p className="text-gray-600">{description}</p>
    </div>
  );
}

function StereoImagesPage({ setCurrentPage }) {
  return (
    <section className="container mx-auto px-4 py-12">
      <div className="max-w-5xl mx-auto">
        <button
          onClick={() => setCurrentPage('home')}
          className="mb-6 text-indigo-600 hover:text-indigo-800 flex items-center"
        >
          <ArrowLeftIcon /> Вернуться на главную
        </button>
        <h2 className="text-3xl font-bold text-gray-800 mb-8">Примеры стереоизображений</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
          {[1, 2, 3, 4].map((i) => (
            <div key={i} className="bg-white rounded-xl overflow-hidden shadow-md hover:shadow-xl transition-shadow">
              <img
                src={`https://picsum.photos/seed/stereo${i}/600/400`}
                alt={`Стереоизображение ${i}`}
                className="w-full h-64 object-cover"
              />
              <div className="p-4">
                <h3 className="text-xl font-semibold text-gray-800 mb-2">Образец {i}</h3>
                <p className="text-gray-600 mb-4">
                  Пример стереопары, демонстрирующей эффект объема при правильном просмотре.
                </p>
                <button
                  className="text-indigo-600 hover:text-indigo-800 font-medium flex items-center"
                  onClick={() => alert('Изображение увеличено!')}
                >
                  Увеличить <ZoomIcon className="ml-1 w-4 h-4" />
                </button>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>
  );
}

function HowToViewPage({ setCurrentPage }) {
  return (
    <section className="container mx-auto px-4 py-12">
      <div className="max-w-5xl mx-auto">
        <button
          onClick={() => setCurrentPage('home')}
          className="mb-6 text-indigo-600 hover:text-indigo-800 flex items-center"
        >
          <ArrowLeftIcon /> Вернуться на главную
        </button>
        <h2 className="text-3xl font-bold text-gray-800 mb-8">Как смотреть стереоизображения</h2>
        <div className="prose max-w-none prose-indigo">
          <ol className="list-decimal pl-6 space-y-4 text-gray-700">
            <li>
              <strong>Метод "Кросс-глаз"</strong>: Сфокусируйте взгляд так, чтобы левое изображение видел только правый глаз,
              а правое — только левый. Это требует небольшой практики.
            </li>
            <li>
              <strong>Метод "Параллельный взгляд"</strong>: Смотрите сквозь изображение, как бы фокусируясь на точке за экраном.
              Левое изображение должно быть для левого глаза, правое — для правого.
            </li>
            <li>
              <strong>С помощью стереоскопа</strong>: Используйте специальное устройство для разделения изображений между глазами.
            </li>
            <li>
              <strong>Анаглифические очки</strong>: Красно-синие очки позволяют воспринимать цветное стереоизображение благодаря
              разным каналам для каждого глаза.
            </li>
          </ol>
          <div className="mt-8">
            <h3 className="text-xl font-semibold text-gray-800 mb-4">Видео-инструкция</h3>
            <div className="aspect-w-16 aspect-h-9 bg-black rounded-lg overflow-hidden shadow-md">
              <iframe
                src="https://www.youtube.com/embed/dQw4w9WgXcQ"
                title="Как смотреть стереоизображения"
                allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                allowFullScreen
                className="w-full h-64 md:h-80"
              ></iframe>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
}

function LiteraturePage({ setCurrentPage }) {
  return (
    <section className="container mx-auto px-4 py-12">
      <div className="max-w-4xl mx-auto">
        <button
          onClick={() => setCurrentPage('home')}
          className="mb-6 text-indigo-600 hover:text-indigo-800 flex items-center"
        >
          <ArrowLeftIcon /> Вернуться на главную
        </button>
        <h2 className="text-3xl font-bold text-gray-800 mb-8">Рекомендуемая литература</h2>
        <div className="bg-white p-6 rounded-xl shadow-md">
          <ul className="space-y-4 text-gray-700 list-disc pl-5">
            <li>Городецкий А.Е. "Стереоскопия и объемное телевидение", Москва, 2005.</li>
            <li>Буряк В.К. "Основы стереоскопического зрения", Санкт-Петербург, 2010.</li>
            <li>Кузнецов С.Д. "Технологии 3D-визуализации", Новосибирск, 2012.</li>
            <li>Смирнов А.В., Тихомиров А.А. "Стереоизображения: теория и практика", Киев, 2017.</li>
            <li>IEEE Transactions on Visualization and Computer Graphics, том 25, выпуск 5, 2019.</li>
          </ul>
        </div>
        <div className="mt-8">
          <button
            onClick={() => setCurrentPage('siteMap')}
            className="bg-indigo-600 hover:bg-indigo-700 text-white px-5 py-2 rounded-md transition-transform transform hover:scale-105"
          >
            Перейти к карте сайта
          </button>
        </div>
      </div>
    </section>
  );
}

function ContactPage({ formData, handleChange, handleSubmit, formSubmitted, setCurrentPage }) {
  return (
    <section className="container mx-auto px-4 py-12">
      <div className="max-w-3xl mx-auto">
        <button
          onClick={() => setCurrentPage('home')}
          className="mb-6 text-indigo-600 hover:text-indigo-800 flex items-center"
        >
          <ArrowLeftIcon /> Вернуться на главную
        </button>
        <h2 className="text-3xl font-bold text-gray-800 mb-8">Обратная связь</h2>
        {formSubmitted ? (
          <div className="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 rounded-md shadow-md">
            <p className="font-medium">Спасибо за ваше сообщение!</p>
            <p>Мы свяжемся с вами в ближайшее время.</p>
          </div>
        ) : (
          <form onSubmit={handleSubmit} className="bg-white p-6 rounded-xl shadow-md">
            <div className="mb-4">
              <label htmlFor="name" className="block text-gray-700 font-medium mb-2">
                Ваше имя
              </label>
              <input
                type="text"
                id="name"
                name="name"
                value={formData.name}
                onChange={handleChange}
                required
                className="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
              />
            </div>
            <div className="mb-4">
              <label htmlFor="email" className="block text-gray-700 font-medium mb-2">
                Email
              </label>
              <input
                type="email"
                id="email"
                name="email"
                value={formData.email}
                onChange={handleChange}
                required
                className="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
              />
            </div>
            <div className="mb-4">
              <label htmlFor="message" className="block text-gray-700 font-medium mb-2">
                Сообщение
              </label>
              <textarea
                id="message"
                name="message"
                rows="5"
                value={formData.message}
                onChange={handleChange}
                required
                className="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500"
              ></textarea>
            </div>
            <button
              type="submit"
              className="bg-indigo-600 hover:bg-indigo-700 text-white px-6 py-2 rounded-md shadow-md transition-transform transform hover:scale-105"
            >
              Отправить
            </button>
          </form>
        )}
      </div>
    </section>
  );
}

function SiteMapPage({ setCurrentPage }) {
  return (
    <section className="container mx-auto px-4 py-12">
      <div className="max-w-4xl mx-auto">
        <button
          onClick={() => setCurrentPage('home')}
          className="mb-6 text-indigo-600 hover:text-indigo-800 flex items-center"
        >
          <ArrowLeftIcon /> Вернуться на главную
        </button>
        <h2 className="text-3xl font-bold text-gray-800 mb-8">Карта сайта</h2>
        <div className="bg-white p-6 rounded-xl shadow-md">
          <ul className="space-y-4 text-gray-700">
            <li>
              <button onClick={() => setCurrentPage('home')} className="hover:text-indigo-600">
                Главная страница
              </button>
            </li>
            <li>
              <button onClick={() => setCurrentPage('stereoImages')} className="hover:text-indigo-600">
                Стереоизображения
              </button>
            </li>
            <li>
              <button onClick={() => setCurrentPage('howToView')} className="hover:text-indigo-600">
                Как смотреть стереоизображения
              </button>
            </li>
            <li>
              <button onClick={() => setCurrentPage('literature')} className="hover:text-indigo-600">
                Рекомендуемая литература
              </button>
            </li>
            <li>
              <button onClick={() => setCurrentPage('contact')} className="hover:text-indigo-600">
                Обратная связь
              </button>
            </li>
          </ul>
        </div>
      </div>
    </section>
  );
}

// Icons

function ImageIcon() {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" className="w-full h-full">
      <path d="M21 19V5a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z" />
    </svg>
  );
}

function EyeIcon() {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" className="w-full h-full">
      <path d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z" />
    </svg>
  );
}

function ArrowLeftIcon() {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" className="w-4 h-4 mr-1">
      <path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" />
    </svg>
  );
}

function ZoomIcon({ className = '' }) {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" className={className}>
      <path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z" />
    </svg>
  );
}
